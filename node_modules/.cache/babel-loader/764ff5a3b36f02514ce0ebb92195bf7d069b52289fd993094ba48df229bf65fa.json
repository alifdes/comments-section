{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\projects\\\\comments-section\\\\src\\\\screens\\\\CommentsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery, useMutation } from \"react-query\";\nimport { getComments } from \"../services/comments\";\nimport CommentCard from \"../components/Comment/CommentCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.section`\n  width: 100%;\n  max-width: 100%; \n  height:auto ;\n  margin: 0 auto; \n  @media only screen and (min-width: 1000px){\n    position:relative ;\n    display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 800px;\n  }\n`;\n_c = Container;\nconst SubContainer = styled.div`\n  max-width: 100%;\n  padding-left: 20px;\n  border-left: 2px solid #9999a1;\n  margin-left: 40px;\n  @media only screen and (min-width: 1000px){\n  }\n`;\n_c2 = SubContainer;\nconst CommentsScreen = () => {\n  _s();\n  //const { data, isLoading } = useQuery(\"comments\", getComments);\n  const [comments, setComments] = useState([]);\n  const {\n    data: currentUser\n  } = useQuery(\"currentUser\", async () => {\n    const result = await axios.get(\"/data.json\");\n    return result.data.currentUser;\n  });\n  const {\n    isLoading\n  } = useQuery(\"comments\", async () => {\n    const result = await axios.get(\"/data.json\");\n    return result.data.comments;\n  }, {\n    onSuccess: data => {\n      setComments(data);\n    }\n  });\n  const addCommentMutation = useMutation(async newComment => {\n    const result = await axios.post(\"/addComment\", newComment);\n    return result.data;\n  }, {\n    onSuccess: data => {\n      setComments(data);\n    }\n  });\n  const addReplyMutation = useMutation(async newReply => {\n    const result = await axios.post(\"/addReply\", newReply);\n    return result.data;\n  }, {\n    onSuccess: data => {\n      setComments(data);\n    }\n  });\n  const handleAddComment = newComment => {\n    addCommentMutation.mutate(newComment);\n  };\n  const handleAddReply = newReply => {\n    addReplyMutation.mutate(newReply);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [comments.map(comment => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentCard, {\n        data: comment,\n        currentUser: currentUser.username,\n        onAddReply: handleAddReply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(SubContainer, {\n        children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(CommentCard, {\n          data: reply,\n          currentUser: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)), /*#__PURE__*/_jsxDEV(AddCommentForm, {\n      onAddComment: handleAddComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsScreen, \"xy6HMPs6z1/X4uyhCZ4JjlqXqzE=\", false, function () {\n  return [useQuery, useQuery, useMutation, useMutation];\n});\n_c3 = CommentsScreen;\nexport default CommentsScreen;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SubContainer\");\n$RefreshReg$(_c3, \"CommentsScreen\");","map":{"version":3,"names":["React","useState","useEffect","styled","useQuery","useMutation","getComments","CommentCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","section","_c","SubContainer","div","_c2","CommentsScreen","_s","comments","setComments","data","currentUser","result","axios","get","isLoading","onSuccess","addCommentMutation","newComment","post","addReplyMutation","newReply","handleAddComment","mutate","handleAddReply","children","map","comment","username","onAddReply","fileName","_jsxFileName","lineNumber","columnNumber","replies","length","reply","AddCommentForm","onAddComment","_c3","$RefreshReg$"],"sources":["C:/Users/user/Desktop/projects/comments-section/src/screens/CommentsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useQuery, useMutation } from \"react-query\";\r\nimport { getComments } from \"../services/comments\";\r\nimport CommentCard from \"../components/Comment/CommentCard\";\r\n\r\n\r\nconst Container = styled.section`\r\n  width: 100%;\r\n  max-width: 100%; \r\n  height:auto ;\r\n  margin: 0 auto; \r\n  @media only screen and (min-width: 1000px){\r\n    position:relative ;\r\n    display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 800px;\r\n  }\r\n`;\r\n\r\nconst SubContainer = styled.div`\r\n  max-width: 100%;\r\n  padding-left: 20px;\r\n  border-left: 2px solid #9999a1;\r\n  margin-left: 40px;\r\n  @media only screen and (min-width: 1000px){\r\n  }\r\n`;\r\n\r\nconst CommentsScreen = () => {\r\n  //const { data, isLoading } = useQuery(\"comments\", getComments);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const { data: currentUser } = useQuery(\"currentUser\", async () => {\r\n    const result = await axios.get(\"/data.json\");\r\n    return result.data.currentUser;\r\n  });\r\n\r\n  const { isLoading } = useQuery(\"comments\", async () => {\r\n    const result = await axios.get(\"/data.json\");\r\n    return result.data.comments;\r\n  }, {\r\n    onSuccess: (data) => {\r\n      setComments(data);\r\n    }\r\n  });\r\n\r\n  const addCommentMutation = useMutation(async (newComment) => {\r\n    const result = await axios.post(\"/addComment\", newComment);\r\n    return result.data;\r\n  }, {\r\n    onSuccess: (data) => {\r\n      setComments(data);\r\n    }\r\n  });\r\n\r\n  const addReplyMutation = useMutation(async (newReply) => {\r\n    const result = await axios.post(\"/addReply\", newReply);\r\n    return result.data;\r\n  }, {\r\n    onSuccess: (data) => {\r\n      setComments(data);\r\n    }\r\n  });\r\n\r\n  const handleAddComment = (newComment) => {\r\n    addCommentMutation.mutate(newComment);\r\n  };\r\n\r\n  const handleAddReply = (newReply) => {\r\n    addReplyMutation.mutate(newReply);\r\n  };\r\n  return (\r\n    <Container>\r\n    {comments.map((comment) => (\r\n      <>\r\n        <CommentCard data={comment} currentUser={currentUser.username} onAddReply={handleAddReply} />\r\n        {comment.replies.length > 0 && (\r\n          <SubContainer>\r\n            {comment.replies.map((reply) => (\r\n              <CommentCard data={reply} currentUser={currentUser.username} />\r\n            ))}\r\n          </SubContainer>\r\n        )}\r\n      </>\r\n    ))}\r\n    <AddCommentForm onAddComment={handleAddComment} />\r\n  </Container>\r\n  )\r\n            }\r\nexport default CommentsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}