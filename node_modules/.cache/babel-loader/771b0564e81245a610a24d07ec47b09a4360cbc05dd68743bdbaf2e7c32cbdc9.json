{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\projects\\\\comments-section\\\\src\\\\screens\\\\CommentsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery, useMutation } from \"react-query\";\nimport { getComments } from \"../services/comments\";\nimport CommentCard from \"../components/Comment/CommentCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.section`\n  width: 100%;\n  max-width: 100%; \n  height:auto ;\n  margin: 0 auto; \n  @media only screen and (min-width: 1000px){\n    position:relative ;\n    display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 800px;\n  }\n`;\n_c = Container;\nconst SubContainer = styled.div`\n  max-width: 100%;\n  padding-left: 20px;\n  border-left: 2px solid #9999a1;\n  margin-left: 40px;\n  @media only screen and (min-width: 1000px){\n  }\n`;\n_c2 = SubContainer;\nconst CommentsScreen = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const {\n    data: currentUser\n  } = useQuery(\"currentUser\", async () => {\n    const result = await axios.get(\"/data.json\");\n    return result.data.currentUser;\n  });\n  const {\n    isLoading\n  } = useQuery(\"comments\", async () => {\n    const result = await axios.get(\"/data.json\");\n    return result.data.comments;\n  }, {\n    onSuccess: data => {\n      setComments(data);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentCard, {\n        data: comment,\n        currentUser: currentUser.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(SubContainer, {\n        children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(CommentCard, {\n          data: reply,\n          currentUser: currentUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsScreen, \"xUYNR/uMGSLyLSrGW1sm/xhPndY=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c3 = CommentsScreen;\nexport default CommentsScreen;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SubContainer\");\n$RefreshReg$(_c3, \"CommentsScreen\");","map":{"version":3,"names":["React","useState","useEffect","styled","useQuery","useMutation","getComments","CommentCard","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","section","_c","SubContainer","div","_c2","CommentsScreen","_s","comments","setComments","data","currentUser","result","get","isLoading","onSuccess","children","map","comment","index","username","fileName","_jsxFileName","lineNumber","columnNumber","replies","length","reply","_c3","$RefreshReg$"],"sources":["C:/Users/user/Desktop/projects/comments-section/src/screens/CommentsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useQuery, useMutation } from \"react-query\";\r\nimport { getComments } from \"../services/comments\";\r\nimport CommentCard from \"../components/Comment/CommentCard\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Container = styled.section`\r\n  width: 100%;\r\n  max-width: 100%; \r\n  height:auto ;\r\n  margin: 0 auto; \r\n  @media only screen and (min-width: 1000px){\r\n    position:relative ;\r\n    display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 800px;\r\n  }\r\n`;\r\n\r\nconst SubContainer = styled.div`\r\n  max-width: 100%;\r\n  padding-left: 20px;\r\n  border-left: 2px solid #9999a1;\r\n  margin-left: 40px;\r\n  @media only screen and (min-width: 1000px){\r\n  }\r\n`;\r\n\r\nconst CommentsScreen = () => {\r\n\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const { data: currentUser } = useQuery(\"currentUser\", async () => {\r\n    const result = await axios.get(\"/data.json\");\r\n    return result.data.currentUser;\r\n  });\r\n\r\n  const { isLoading } = useQuery(\"comments\", async () => {\r\n    const result = await axios.get(\"/data.json\");\r\n    return result.data.comments;\r\n  }, {\r\n    onSuccess: (data) => {\r\n      setComments(data);\r\n    }\r\n  });\r\n\r\n \r\n\r\n  return (\r\n    <Container>\r\n    {comments.map((comment,index) => (\r\n      <>\r\n        <CommentCard data={comment} currentUser={currentUser.username}  />\r\n        {comment.replies.length > 0 && (\r\n          <SubContainer>\r\n            {comment.replies.map((reply) => (\r\n              <CommentCard data={reply} currentUser={currentUser.username} />\r\n            ))}\r\n          </SubContainer>\r\n        )}\r\n      </>\r\n    ))}\r\n  </Container>\r\n  )\r\n            }\r\nexport default CommentsScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,aAAa;AACnD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1B,MAAMC,SAAS,GAAGV,MAAM,CAACW,OAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAZIF,SAAS;AAcf,MAAMG,YAAY,GAAGb,MAAM,CAACc,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,YAAY;AASlB,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAAEsB,IAAI,EAAEC;EAAY,CAAC,GAAGpB,QAAQ,CAAC,aAAa,EAAE,YAAY;IAChE,MAAMqB,MAAM,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,YAAY,CAAC;IAC5C,OAAOD,MAAM,CAACF,IAAI,CAACC,WAAW;EAChC,CAAC,CAAC;EAEF,MAAM;IAAEG;EAAU,CAAC,GAAGvB,QAAQ,CAAC,UAAU,EAAE,YAAY;IACrD,MAAMqB,MAAM,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,YAAY,CAAC;IAC5C,OAAOD,MAAM,CAACF,IAAI,CAACF,QAAQ;EAC7B,CAAC,EAAE;IACDO,SAAS,EAAGL,IAAI,IAAK;MACnBD,WAAW,CAACC,IAAI,CAAC;IACnB;EACF,CAAC,CAAC;EAIF,oBACEb,OAAA,CAACG,SAAS;IAAAgB,QAAA,EACTR,QAAQ,CAACS,GAAG,CAAC,CAACC,OAAO,EAACC,KAAK,kBAC1BtB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACEnB,OAAA,CAACH,WAAW;QAACgB,IAAI,EAAEQ,OAAQ;QAACP,WAAW,EAAEA,WAAW,CAACS;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EACjEN,OAAO,CAACO,OAAO,CAACC,MAAM,GAAG,CAAC,iBACzB7B,OAAA,CAACM,YAAY;QAAAa,QAAA,EACVE,OAAO,CAACO,OAAO,CAACR,GAAG,CAAEU,KAAK,iBACzB9B,OAAA,CAACH,WAAW;UAACgB,IAAI,EAAEiB,KAAM;UAAChB,WAAW,EAAEA,WAAW,CAACS;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEL;IAAA,gBAEJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AAEF,CAAC;AAAAjB,EAAA,CApCPD,cAAc;EAAA,QAIYf,QAAQ,EAKhBA,QAAQ;AAAA;AAAAqC,GAAA,GAT1BtB,cAAc;AAqCpB,eAAeA,cAAc;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}