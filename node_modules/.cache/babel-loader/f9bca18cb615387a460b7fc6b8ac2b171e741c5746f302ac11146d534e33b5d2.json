{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\projects\\\\comments-section\\\\src\\\\screens\\\\CommentsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useQuery, useMutation } from 'react-query';\nimport { getComments } from '../services/comments';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 1rem;\n`;\n_c = Container;\nconst Comments = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n_c2 = Comments;\nconst Comment = styled.li`\n  margin-bottom: 1rem;\n`;\n_c3 = Comment;\nconst CommentHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c4 = CommentHeader;\nconst CommentAuthor = styled.span`\n  font-weight: bold;\n`;\nconst CommentContent = styled.p`\n  margin-top: 0.5rem;\n`;\n_c5 = CommentContent;\nconst CommentActions = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst CommentAction = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  margin-left: 1rem;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst CommentsScreen = () => {\n  _s();\n  const {\n    data,\n    isLoading\n  } = useQuery('comments', getComments);\n  const [newComment, setNewComment] = useState('');\n  const [editedComment, setEditedComment] = useState(null);\n  const [showDeleteConfirmationModal, setShowDeleteConfirmationModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: data.comments.map(comment => /*#__PURE__*/_jsxDEV(Comments, {\n        children: /*#__PURE__*/_jsxDEV(Comment, {\n          children: [/*#__PURE__*/_jsxDEV(CommentHeader, {\n            children: comment.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(CommentsScreen, \"pyUtceb9vMhGy55Nf0SdyonnyoY=\", false, function () {\n  return [useQuery];\n});\n_c6 = CommentsScreen;\nexport default CommentsScreen;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Comments\");\n$RefreshReg$(_c3, \"Comment\");\n$RefreshReg$(_c4, \"CommentHeader\");\n$RefreshReg$(_c5, \"CommentContent\");\n$RefreshReg$(_c6, \"CommentsScreen\");","map":{"version":3,"names":["React","useState","useEffect","styled","useQuery","useMutation","getComments","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Comments","ul","_c2","Comment","li","_c3","CommentHeader","_c4","CommentAuthor","span","CommentContent","p","_c5","CommentActions","CommentAction","button","CommentsScreen","_s","data","isLoading","newComment","setNewComment","editedComment","setEditedComment","showDeleteConfirmationModal","setShowDeleteConfirmationModal","children","comments","map","comment","user","username","fileName","_jsxFileName","lineNumber","columnNumber","content","_c6","$RefreshReg$"],"sources":["C:/Users/user/Desktop/projects/comments-section/src/screens/CommentsScreen.js"],"sourcesContent":["import React, { useState , useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation } from 'react-query';\r\nimport { getComments } from '../services/comments';\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Comments = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst Comment = styled.li`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst CommentHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CommentAuthor = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CommentContent = styled.p`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst CommentActions = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CommentAction = styled.button`\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  margin-left: 1rem;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst CommentsScreen = () => {\r\n  const { data, isLoading } = useQuery('comments', getComments);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [editedComment, setEditedComment] = useState(null);\r\n  const [showDeleteConfirmationModal, setShowDeleteConfirmationModal] =useState(false);\r\n\r\nreturn(\r\n<>\r\n<Container>\r\n{data.comments.map(comment => ( \r\n     <Comments>\r\n        <Comment>\r\n            <CommentHeader>\r\n{comment.user.username}\r\n            </CommentHeader>\r\n            <CommentContent>\r\n                {comment.content}\r\n            </CommentContent>\r\n        </Comment>\r\n     </Comments>\r\n       ))}\r\n</Container>\r\n</>\r\n);\r\n}\r\n\r\nexport default  CommentsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}