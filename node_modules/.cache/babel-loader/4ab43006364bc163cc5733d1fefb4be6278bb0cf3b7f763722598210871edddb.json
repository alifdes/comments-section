{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\projects\\\\comments-section\\\\src\\\\screens\\\\CommentsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery, useMutation } from \"react-query\";\nimport { getComments } from \"../services/comments\";\nimport CommentCard from \"../components/Comment/Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nCommentCard;\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 1rem;\n  width: 800px;\n`;\n_c = Container;\nconst Comments = styled.ul`\n  list-style: none;\n  margin: 10px;\n  padding: 0px;\n  display: flex;\n  background: #ffffff;\n  min-height: 130px;\n`;\n_c2 = Comments;\nconst CommentActions = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst CommentAction = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  margin-left: 1rem;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst CommentsScreen = () => {\n  _s();\n  const {\n    data,\n    isLoading\n  } = useQuery(\"comments\", getComments);\n  const [newComment, setNewComment] = useState(\"\");\n  const [editedComment, setEditedComment] = useState(null);\n  const [showDeleteConfirmationModal, setShowDeleteConfirmationModal] = useState(false);\n  const [count, setCount] = useState(12);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: data === null || data === void 0 ? void 0 : data.comments.map(comment => /*#__PURE__*/_jsxDEV(Comments, {\n        children: [/*#__PURE__*/_jsxDEV(CountSection, {\n          children: [/*#__PURE__*/_jsxDEV(Sign, {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), count, /*#__PURE__*/_jsxDEV(Sign, {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Comment, {\n          children: [/*#__PURE__*/_jsxDEV(CommentHeader, {\n            children: [/*#__PURE__*/_jsxDEV(CommentAuthor, {\n              children: [/*#__PURE__*/_jsxDEV(\"avatar\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: comment.user.image.png\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#505860\",\n                  fontWeight: \"bold\"\n                },\n                children: [\" \", comment.user.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  paddingLeft: \"5px\"\n                },\n                children: [\" \", comment.createdAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"replaySection\", {\n              children: \"MemoIconReplyReply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CommentsScreen, \"c66Vu2WzpCRE7hmpLzB6Qvl0nJQ=\", false, function () {\n  return [useQuery];\n});\n_c3 = CommentsScreen;\nexport default CommentsScreen;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Comments\");\n$RefreshReg$(_c3, \"CommentsScreen\");","map":{"version":3,"names":["React","useState","useEffect","styled","useQuery","useMutation","getComments","CommentCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Comments","ul","_c2","CommentActions","CommentAction","button","CommentsScreen","_s","data","isLoading","newComment","setNewComment","editedComment","setEditedComment","showDeleteConfirmationModal","setShowDeleteConfirmationModal","count","setCount","children","comments","map","comment","CountSection","Sign","fileName","_jsxFileName","lineNumber","columnNumber","Comment","CommentHeader","CommentAuthor","src","user","image","png","style","color","fontWeight","username","paddingLeft","createdAt","CommentContent","content","_c3","$RefreshReg$"],"sources":["C:/Users/user/Desktop/projects/comments-section/src/screens/CommentsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useQuery, useMutation } from \"react-query\";\r\nimport { getComments } from \"../services/comments\";\r\nimport CommentCard from \"../components/Comment/Comment\";\r\nCommentCard\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 1rem;\r\n  width: 800px;\r\n`;\r\n\r\nconst Comments = styled.ul`\r\n  list-style: none;\r\n  margin: 10px;\r\n  padding: 0px;\r\n  display: flex;\r\n  background: #ffffff;\r\n  min-height: 130px;\r\n`;\r\n\r\n\r\nconst CommentActions = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CommentAction = styled.button`\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  margin-left: 1rem;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst CommentsScreen = () => {\r\n  const { data, isLoading } = useQuery(\"comments\", getComments);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [editedComment, setEditedComment] = useState(null);\r\n  const [showDeleteConfirmationModal, setShowDeleteConfirmationModal] =\r\n    useState(false);\r\n  const [count, setCount] = useState(12);\r\n  return (\r\n    <>\r\n      <Container>\r\n        {data?.comments.map((comment) => (\r\n          <Comments>\r\n            <CountSection>\r\n              <Sign>+</Sign>\r\n              {count}\r\n              <Sign>-</Sign>\r\n            </CountSection>\r\n            <Comment>\r\n              <CommentHeader>\r\n                <CommentAuthor>\r\n                  <avatar>\r\n                    <img src={comment.user.image.png} />\r\n                  </avatar>\r\n                  <span style={{ color: \"#505860\", fontWeight: \"bold\" }}>\r\n                    {\" \"}\r\n                    {comment.user.username}{\" \"}\r\n                  </span >\r\n                  <span style={{ paddingLeft:\"5px\"}}> {comment.createdAt}</span>\r\n                </CommentAuthor>\r\n                <replaySection>MemoIconReplyReply</replaySection>\r\n              </CommentHeader>\r\n              <CommentContent>{comment.content}</CommentContent>\r\n            </Comment>\r\n          </Comments>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}